-- create schemas
CREATE SCHEMA IF NOT EXISTS production;
CREATE SCHEMA IF NOT EXISTS sales;

-- production tables
CREATE TABLE production.categories (
	category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	category_name VARCHAR(255) NOT NULL
);

CREATE TABLE production.brands (
	brand_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	brand_name VARCHAR(255) NOT NULL
);

CREATE TABLE production.products (
	product_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	product_name VARCHAR (255) NOT NULL,
	brand_id INT NOT NULL,
	category_id INT NOT NULL,
	model_year SMALLINT NOT NULL,
	list_price DECIMAL (10, 2) NOT NULL,
	FOREIGN KEY (category_id) REFERENCES production.categories (category_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (brand_id) REFERENCES production.brands (brand_id) ON DELETE CASCADE ON UPDATE CASCADE
);

-- sales tables
CREATE TABLE sales.customers(
    customer_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	first_name VARCHAR(255) NOT NULL,
	last_name VARCHAR(255) NOT NULL,
	phone VARCHAR(25),
	email VARCHAR(255) NOT NULL,
	street VARCHAR(255),
	city VARCHAR(60),
	state VARCHAR(30),
	zip_code VARCHAR(10)
);

CREATE TABLE sales.stores (
    store_id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	store_name VARCHAR(255) NOT NULL,
    phone VARCHAR(25),
	email VARCHAR(255) NOT NULL,
	street VARCHAR(255),
	city VARCHAR(60),
	state VARCHAR(30),
	zip_code VARCHAR(10)
);

CREATE TABLE sales.staffs(
   staff_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   first_name VARCHAR (50) NOT NULL,
   last_name VARCHAR(50) NOT NULL,
   email VARCHAR(255) NOT NULL UNIQUE,
   phone VARCHAR(30),
   active BOOLEAN NOT NULL DEFAULT TRUE,
   store_id INT NOT NULL,
   manager_id INT,
   FOREIGN KEY (store_id) REFERENCES sales.stores (store_id) ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY (manager_id) REFERENCES sales.staffs (staff_id) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE sales.staffs
ALTER COLUMN active DROP DEFAULT;

ALTER TABLE sales.staffs
ALTER COLUMN active TYPE INT
USING (CASE WHEN active THEN 1 ELSE 0 END);

CREATE TABLE sales.orders (
	order_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	customer_id INT,
	order_status INT NOT NULL,
	order_date DATE NOT NULL,
	required_date DATE NOT NULL,
	shipped_date DATE,
	store_id INT NOT NULL,
	staff_id INT NOT NULL,
	FOREIGN KEY (customer_id) REFERENCES sales.customers (customer_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (store_id) REFERENCES sales.stores (store_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (staff_id) REFERENCES sales.staffs (staff_id) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE sales.order_items (
	order_id INT,
	item_id INT,
	product_id INT NOT NULL,
	quantity INT NOT NULL,
	list_price DECIMAL (10, 2) NOT NULL,
	discount DECIMAL (4, 2) NOT NULL DEFAULT 0,
	PRIMARY KEY (order_id, item_id),
	FOREIGN KEY (order_id) REFERENCES sales.orders (order_id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (product_id) REFERENCES production.products (product_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE production.stocks(
     store_id INT,
     product_id INT,
     quantity INT NOT NULL,
	 PRIMARY KEY (store_id, product_id),
	 FOREIGN KEY (store_id) REFERENCES sales.stores(store_id) ON DELETE CASCADE ON UPDATE CASCADE,
	 FOREIGN KEY (product_id) REFERENCES production.products(product_id) ON DELETE CASCADE ON UPDATE CASCADE
);
